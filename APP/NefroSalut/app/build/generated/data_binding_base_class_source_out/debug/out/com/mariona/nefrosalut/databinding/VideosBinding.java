// Generated by view binder compiler. Do not edit!
package com.mariona.nefrosalut.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import android.widget.VideoView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.mariona.nefrosalut.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class VideosBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Guideline guideline14;

  @NonNull
  public final Guideline guideline18;

  @NonNull
  public final TextView nomCategoria;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final VideoView videoView2;

  private VideosBinding(@NonNull ConstraintLayout rootView, @NonNull Guideline guideline14,
      @NonNull Guideline guideline18, @NonNull TextView nomCategoria, @NonNull TextView textView3,
      @NonNull Toolbar toolbar, @NonNull VideoView videoView2) {
    this.rootView = rootView;
    this.guideline14 = guideline14;
    this.guideline18 = guideline18;
    this.nomCategoria = nomCategoria;
    this.textView3 = textView3;
    this.toolbar = toolbar;
    this.videoView2 = videoView2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static VideosBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static VideosBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.videos, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static VideosBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.guideline14;
      Guideline guideline14 = ViewBindings.findChildViewById(rootView, id);
      if (guideline14 == null) {
        break missingId;
      }

      id = R.id.guideline18;
      Guideline guideline18 = ViewBindings.findChildViewById(rootView, id);
      if (guideline18 == null) {
        break missingId;
      }

      id = R.id.nomCategoria;
      TextView nomCategoria = ViewBindings.findChildViewById(rootView, id);
      if (nomCategoria == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.videoView2;
      VideoView videoView2 = ViewBindings.findChildViewById(rootView, id);
      if (videoView2 == null) {
        break missingId;
      }

      return new VideosBinding((ConstraintLayout) rootView, guideline14, guideline18, nomCategoria,
          textView3, toolbar, videoView2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
