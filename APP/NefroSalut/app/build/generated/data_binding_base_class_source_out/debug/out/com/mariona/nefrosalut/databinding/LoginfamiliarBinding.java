// Generated by view binder compiler. Do not edit!
package com.mariona.nefrosalut.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.mariona.nefrosalut.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LoginfamiliarBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton btnSubmitLogin;

  @NonNull
  public final EditText etLoginEmail;

  @NonNull
  public final EditText etLoginPassword;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TextView tvLoginTitle;

  private LoginfamiliarBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton btnSubmitLogin, @NonNull EditText etLoginEmail,
      @NonNull EditText etLoginPassword, @NonNull ConstraintLayout main,
      @NonNull TextView tvLoginTitle) {
    this.rootView = rootView;
    this.btnSubmitLogin = btnSubmitLogin;
    this.etLoginEmail = etLoginEmail;
    this.etLoginPassword = etLoginPassword;
    this.main = main;
    this.tvLoginTitle = tvLoginTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LoginfamiliarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LoginfamiliarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.loginfamiliar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LoginfamiliarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSubmitLogin;
      AppCompatButton btnSubmitLogin = ViewBindings.findChildViewById(rootView, id);
      if (btnSubmitLogin == null) {
        break missingId;
      }

      id = R.id.etLoginEmail;
      EditText etLoginEmail = ViewBindings.findChildViewById(rootView, id);
      if (etLoginEmail == null) {
        break missingId;
      }

      id = R.id.etLoginPassword;
      EditText etLoginPassword = ViewBindings.findChildViewById(rootView, id);
      if (etLoginPassword == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.tvLoginTitle;
      TextView tvLoginTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvLoginTitle == null) {
        break missingId;
      }

      return new LoginfamiliarBinding((ConstraintLayout) rootView, btnSubmitLogin, etLoginEmail,
          etLoginPassword, main, tvLoginTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
